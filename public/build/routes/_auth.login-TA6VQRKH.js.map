{
  "version": 3,
  "sources": ["../../../app/routes/_auth.login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_auth.login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_auth.login.tsx\");\n  import.meta.hot.lastModified = \"1734512536152.3853\";\n}\n// REMIX HMR END\n\n// app/routes/_auth.login.tsx\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { Button, TextField, Typography, Container, Box } from \"@mui/material\";\nimport { authenticator } from \"../services/_auth.server\";\nexport async function loader({\n  request\n}) {\n  await authenticator.authenticate(request, {\n    successRedirect: \"/dashboard\"\n  });\n  return null;\n}\nexport async function action({\n  request\n}) {\n  try {\n    return await authenticator.authenticate(\"user-pass\", request, {\n      successRedirect: \"/dashboard\",\n      failureRedirect: \"/login\"\n    });\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n}\nexport default function LoginPage() {\n  _s();\n  const actionData = useActionData();\n  return <Container maxWidth=\"xs\">\r\n      <Box sx={{\n      marginTop: 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Form method=\"post\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth label=\"Username\" name=\"username\" />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" />\r\n          {actionData?.error && <Typography color=\"error\">{actionData.error}</Typography>}\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" sx={{\n          mt: 3\n        }}>\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n      </Box>\r\n    </Container>;\n}\n_s(LoginPage, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,kBAA8B;AAiCtB;AAxDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AA6Be,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,qBAAU,UAAS,MACvB,6DAAC,eAAI,IAAI;AAAA,IACT,WAAW;AAAA,IACX,SAAS;AAAA,IACT,eAAe;AAAA,IACf,YAAY;AAAA,EACd,GACI;AAAA,uDAAC,sBAAW,WAAU,MAAK,SAAQ,MAAK,uBAAxC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,qBAAU,SAAQ,YAAW,QAAO,UAAS,UAAQ,MAAC,WAAS,MAAC,OAAM,YAAW,MAAK,cAAvF;AAAA;AAAA;AAAA;AAAA,aAAkG;AAAA,MAClG,mDAAC,qBAAU,SAAQ,YAAW,QAAO,UAAS,UAAQ,MAAC,WAAS,MAAC,MAAK,YAAW,OAAM,YAAW,MAAK,cAAvG;AAAA;AAAA;AAAA;AAAA,aAAkH;AAAA,MACjH,YAAY,SAAS,mDAAC,sBAAW,OAAM,SAAS,qBAAW,SAAtC;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,MAClE,mDAAC,kBAAO,MAAK,UAAS,WAAS,MAAC,SAAQ,aAAY,OAAM,WAAU,IAAI;AAAA,QACxE,IAAI;AAAA,MACN,GAAG,uBAFD;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA,KApBG;AAAA;AAAA;AAAA;AAAA,SAqBL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
